nextflow.enable.dsl=2


params {

    help = false

    run_count_oligos = false

    // PULL_CONTAINERS
    slurm_config = "${projectDir}/conf/slurm.config"
    pull_containers_file = "${projectDir}/data/python_scripts/pull_containers.py"

    // CHECK_FILES_PIPE
    check_files_script = "${projectDir}/data/python_scripts/check_files.py"

    // ANNOTATE_PIPE
	lct_script = "${projectDir}/data/python_scripts/find_longest_coding_transcripts.py"
    ctdCDS_script = "${projectDir}/data/python_scripts/create_tab_delimited_CDS_file.py"

    // INDEX
    index_threads = 24 // or 16 

    // RIBOSEQ_PIPE
    count_oligos_script = "${projectDir}/data/python_scripts/count_oligos.py"
    find_overrepresented_sequences_script = "${projectDir}/data/python_scripts/find_overrepresented_sequences.py"
    plot_read_lengths_script = "${projectDir}/data/python_scripts/plot_read_lengths.py"
    determine_p_site_offsets_script = "${projectDir}/data/python_scripts/determine_p_site_offsets.py"
    count_reads_script = "${projectDir}/data/python_scripts/count_reads.py"
    check_periodicity_script = "${projectDir}/data/python_scripts/check_periodicity.py"
    filter_lengths_offsets_script = "${projectDir}/data/python_scripts/filter_reads_based_on_read_lengths_and_offsets.py"

    // TRIM_FIRST_BASES
    cut = 5
    minimum_length = 20

    // CLIP_READS
    clip_reads_v = "-v"
    clip_reads_n = "-n"
    clip_reads_l = 20
    clip_reads_c = "-c"
    clip_reads_adapter = 'AAAAAAAAAA'
    clip_reads_z = "-z"

    // TRIM_READS
    trim_reads_v = "-v"
    trim_reads_l = 20
    trim_reads_t = 20
    trim_reads_Q = 33
    trim_reads_z = "-z"

    // FILTER_READS
    filter_reads_v = "-v"
    filter_reads_q = 20
    filter_reads_p = "90"
    filter_reads_z = "-z"
    filter_reads_Q = 33

    // FASTQ_TO_FASTA
    fq_to_fa_v = "-v"
    fq_to_fa_n = "-n"
    fq_to_fa_r = "-r"

    // segemehl mapping
    segemehl_silent = "--silent"
    segemehl_accuracy = "90"
    segemehl_threads = "25"

	// star mapping
	star_map_threads = 24

    // CHECK_PERIODICITY
    check_peridocitiy_codnum = 100
   
    // RIBOTISH_PIPE
    ribotish_quality_th = 0.4
    ribotish_predict_mode = "--longest" // or ""
	sorf_peptide_script = "${projectDir}/data/python_scripts/find_sorf_peptide.py"
 
    // PHILOSOPHER_PIPE
	workspace = "${projectDir}/workspace"
    change_params_script = "${projectDir}/data/python_scripts/change_file.py"
	// this parameter is unfortunately needed for the the WORKSPACE process
	// where the proteomics files are loaded into the workspace dir
	proteomics_reads = "${projectDir}/data/proteomics_reads"

}

	params.peptideprophet_args = """--combine \
							--decoy rev_ \
							--ppm \
							--accmass \
							--expectscore \
							--decoyprobs \
							--nonparam \
							"""

	params.skip_proteinprophet = false
	
	if ( params.skip_proteinprophet == false ) {
		params.philosopher_filter_args = """--psm 0.05 \
											--ion 0.05 \
											--pep 0.05 \
											--prot 1 \
											# --sequential \
											--razor \
											--picked \
											--tag rev_
											"""
	}
	if ( params.skip_proteinprophet ) {

		params.philosopher_filter_args = """--picked \
            								--tag rev_ \
											"""
	}

params {

	// publishDir
	annotate_dir = "results/annotate"
	riboseq_dir = "results/riboseq"
	ribotish_dir = "results/ribotish"
	philosopher_dir = "results/philosopher"

}


profiles {

    slurm {
        includeConfig 'conf/slurm.config'
        params.fragger_ram = 80
    }

	slurm_offline {
        includeConfig 'conf/slurm_offline.config'
        params.fragger_ram = 80
    }

    docker {
        includeConfig 'conf/docker.config'
        params.fragger_ram = 8
    }

}
